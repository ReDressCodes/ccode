#include <cstdio>
#include <windows.h>
#include <gdiplus.h>
#include <tlhelp32.h>

using namespace Gdiplus;

CHOOSEFONT cf;        // common dialog box font structure
LOGFONT lf;           // logical font structure
HFONT hfont;          // new logical font handle
HFONT hfontOld;       // original logical font handle
HDC hdc;              // display DC handle
int nXStart, nYStart; // drawing coordinates
RECT rc;              // structure for painting window
SIZE sz;              // structure that receives text extents
double aflSin[90];    // sine of 0-90 degrees
double aflCos[90];    // cosine of 0-90 degrees
double flRadius, a;   // radius of circle
int iMode;            // clipping mode
HRGN hrgn;            // clip region handle

POINT pti[] = {
    {49, 56},  {55, 56},  {55, 52},  {55, 51},  {55, 51},  {55, 51},  {55, 50},
    {55, 50},  {55, 50},  {54, 50},  {54, 50},  {54, 50},  {53, 50},  {53, 50},
    {59, 50},  {59, 50},  {59, 50},  {58, 50},  {58, 50},  {58, 50},  {57, 50},
    {57, 50},  {57, 51},  {57, 51},  {57, 51},  {57, 52},  {57, 60},  {57, 61},
    {57, 62},  {57, 62},  {57, 62},  {57, 62},  {58, 62},  {58, 62},  {58, 62},
    {59, 62},  {59, 62},  {59, 63},  {53, 63},  {53, 62},  {54, 62},  {54, 62},
    {55, 62},  {55, 62},  {55, 62},  {55, 61},  {55, 60},  {55, 56},  {49, 56},
    {49, 60},  {49, 61},  {49, 62},  {49, 62},  {49, 62},  {49, 62},  {50, 62},
    {50, 62},  {50, 62},  {51, 62},  {51, 62},  {51, 63},  {45, 63},  {45, 62},
    {46, 62},  {46, 62},  {47, 62},  {47, 62},  {47, 62},  {47, 61},  {47, 60},
    {47, 52},  {47, 51},  {47, 51},  {47, 51},  {47, 50},  {47, 50},  {47, 50},
    {46, 50},  {46, 50},  {46, 50},  {45, 50},  {45, 50},  {51, 50},  {51, 50},
    {51, 50},  {50, 50},  {50, 50},  {50, 50},  {49, 50},  {49, 50},  {49, 51},
    {49, 51},  {49, 51},  {49, 52},  {62, 57},  {62, 59},  {62, 60},  {63, 60},
    {63, 61},  {64, 62},  {65, 62},  {65, 62},  {66, 61},  {66, 61},  {67, 61},
    {67, 60},  {67, 59},  {68, 60},  {68, 60},  {67, 61},  {67, 62},  {66, 63},
    {65, 63},  {64, 63},  {63, 63},  {62, 63},  {61, 62},  {61, 61},  {60, 60},
    {60, 58},  {60, 57},  {61, 56},  {61, 55},  {62, 54},  {63, 54},  {64, 54},
    {65, 54},  {66, 54},  {67, 55},  {67, 55},  {68, 56},  {68, 57},  {62, 57},
    {66, 57},  {66, 56},  {66, 56},  {66, 55},  {65, 55},  {65, 55},  {65, 55},
    {64, 54},  {64, 54},  {64, 54},  {63, 54},  {63, 55},  {62, 55},  {62, 55},
    {62, 56},  {62, 57},  {72, 49},  {72, 61},  {72, 61},  {72, 62},  {72, 62},
    {72, 62},  {72, 62},  {73, 62},  {73, 62},  {73, 62},  {73, 62},  {73, 63},
    {69, 63},  {69, 62},  {69, 62},  {70, 62},  {70, 62},  {70, 62},  {70, 62},
    {70, 62},  {70, 62},  {70, 61},  {70, 61},  {70, 53},  {70, 52},  {70, 51},
    {70, 51},  {70, 51},  {70, 50},  {70, 50},  {70, 50},  {70, 50},  {70, 50},
    {70, 50},  {69, 50},  {69, 50},  {69, 50},  {72, 49},  {78, 49},  {78, 61},
    {78, 61},  {78, 62},  {78, 62},  {78, 62},  {78, 62},  {78, 62},  {78, 62},
    {79, 62},  {79, 62},  {79, 63},  {75, 63},  {75, 62},  {75, 62},  {75, 62},
    {75, 62},  {76, 62},  {76, 62},  {76, 62},  {76, 62},  {76, 61},  {76, 61},
    {76, 53},  {76, 52},  {76, 51},  {76, 51},  {76, 51},  {76, 50},  {76, 50},
    {76, 50},  {75, 50},  {75, 50},  {75, 50},  {75, 50},  {75, 50},  {74, 50},
    {77, 49},  {84, 54},  {86, 54},  {87, 54},  {88, 55},  {88, 56},  {89, 57},
    {89, 58},  {89, 59},  {89, 60},  {88, 61},  {88, 61},  {87, 62},  {87, 62},
    {86, 63},  {85, 63},  {84, 63},  {83, 63},  {82, 63},  {81, 61},  {80, 61},
    {80, 60},  {80, 58},  {80, 58},  {80, 57},  {81, 56},  {81, 55},  {82, 55},
    {82, 54},  {83, 54},  {84, 54},  {84, 54},  {84, 54},  {84, 54},  {83, 54},
    {83, 55},  {83, 55},  {82, 55},  {82, 56},  {82, 56},  {82, 57},  {82, 58},
    {82, 59},  {82, 60},  {83, 61},  {83, 62},  {84, 62},  {85, 62},  {85, 62},
    {86, 62},  {86, 62},  {87, 61},  {87, 60},  {87, 59},  {87, 57},  {87, 56},
    {86, 55},  {85, 55},  {85, 54},  {84, 54},  {108, 50}, {108, 50}, {108, 50},
    {108, 50}, {107, 50}, {107, 50}, {107, 50}, {107, 51}, {107, 51}, {106, 52},
    {106, 52}, {102, 63}, {102, 63}, {99, 55},  {96, 63},  {96, 63},  {92, 52},
    {91, 51},  {91, 51},  {91, 51},  {91, 50},  {91, 50},  {91, 50},  {90, 50},
    {90, 50},  {90, 50},  {90, 50},  {95, 50},  {95, 50},  {94, 50},  {94, 50},
    {94, 50},  {94, 50},  {93, 50},  {93, 51},  {93, 51},  {93, 51},  {93, 51},
    {94, 52},  {96, 60},  {99, 53},  {98, 52},  {98, 51},  {98, 51},  {98, 51},
    {97, 51},  {97, 50},  {97, 50},  {97, 50},  {97, 50},  {97, 50},  {97, 50},
    {96, 50},  {96, 50},  {96, 50},  {96, 50},  {101, 50}, {101, 50}, {101, 50},
    {100, 50}, {100, 50}, {100, 50}, {100, 50}, {100, 51}, {100, 51}, {100, 51},
    {100, 52}, {100, 53}, {103, 60}, {105, 52}, {106, 52}, {106, 51}, {106, 51},
    {106, 51}, {106, 50}, {106, 50}, {105, 50}, {105, 50}, {105, 50}, {105, 50},
    {105, 50}, {104, 50}, {104, 50}, {113, 54}, {115, 54}, {116, 54}, {117, 55},
    {117, 56}, {118, 57}, {118, 58}, {118, 59}, {117, 60}, {117, 61}, {117, 61},
    {116, 62}, {115, 62}, {115, 63}, {114, 63}, {113, 63}, {112, 63}, {111, 63},
    {110, 61}, {109, 61}, {109, 60}, {109, 58}, {109, 58}, {109, 57}, {110, 56},
    {110, 55}, {111, 55}, {111, 54}, {112, 54}, {113, 54}, {113, 54}, {113, 54},
    {113, 54}, {112, 54}, {112, 55}, {112, 55}, {111, 55}, {111, 56}, {111, 56},
    {111, 57}, {111, 58}, {111, 59}, {111, 60}, {112, 61}, {112, 62}, {113, 62},
    {114, 62}, {114, 62}, {115, 62}, {115, 62}, {116, 61}, {116, 60}, {116, 59},
    {116, 57}, {115, 56}, {115, 55}, {114, 55}, {114, 54}, {113, 54}, {122, 54},
    {122, 56}, {122, 54}, {123, 54}, {124, 54}, {124, 54}, {125, 54}, {125, 54},
    {125, 54}, {125, 54}, {125, 55}, {125, 55}, {125, 55}, {125, 55}, {125, 56},
    {124, 56}, {124, 56}, {124, 56}, {124, 55}, {123, 55}, {123, 55}, {123, 55},
    {123, 55}, {123, 55}, {123, 55}, {122, 55}, {122, 55}, {122, 56}, {122, 56},
    {122, 61}, {122, 61}, {122, 62}, {122, 62}, {122, 62}, {122, 62}, {122, 62},
    {122, 62}, {123, 62}, {123, 62}, {123, 63}, {119, 63}, {119, 62}, {119, 62},
    {119, 62}, {120, 62}, {120, 62}, {120, 62}, {120, 62}, {120, 62}, {120, 61},
    {120, 61}, {120, 57}, {120, 56}, {120, 56}, {120, 55}, {120, 55}, {120, 55},
    {120, 55}, {120, 55}, {119, 55}, {119, 55}, {119, 55}, {119, 55}, {119, 55},
    {118, 55}, {121, 54}, {129, 49}, {129, 61}, {129, 61}, {129, 62}, {129, 62},
    {129, 62}, {129, 62}, {129, 62}, {129, 62}, {130, 62}, {130, 62}, {130, 63},
    {126, 63}, {126, 62}, {126, 62}, {126, 62}, {127, 62}, {127, 62}, {127, 62},
    {127, 62}, {127, 62}, {127, 61}, {127, 61}, {127, 53}, {127, 52}, {127, 51},
    {127, 51}, {127, 51}, {127, 50}, {127, 50}, {127, 50}, {127, 50}, {126, 50},
    {126, 50}, {126, 50}, {126, 50}, {126, 50}, {128, 49}, {137, 62}, {137, 62},
    {137, 63}, {136, 63}, {136, 63}, {135, 63}, {135, 63}, {134, 63}, {133, 63},
    {132, 62}, {132, 61}, {131, 60}, {131, 59}, {131, 57}, {132, 56}, {132, 55},
    {133, 54}, {134, 54}, {136, 54}, {136, 54}, {137, 54}, {137, 54}, {137, 53},
    {137, 52}, {137, 51}, {137, 51}, {137, 51}, {137, 50}, {137, 50}, {137, 50},
    {137, 50}, {137, 50}, {137, 50}, {136, 50}, {136, 50}, {136, 50}, {139, 49},
    {139, 49}, {139, 59}, {139, 60}, {139, 61}, {139, 61}, {139, 61}, {139, 62},
    {139, 62}, {139, 62}, {140, 62}, {140, 62}, {140, 62}, {140, 62}, {140, 62},
    {141, 62}, {138, 63}, {137, 63}, {137, 61}, {137, 57}, {137, 56}, {137, 56},
    {137, 55}, {137, 55}, {137, 55}, {136, 54}, {136, 54}, {136, 54}, {135, 54},
    {135, 54}, {134, 54}, {134, 55}, {133, 56}, {133, 57}, {133, 58}, {133, 59},
    {133, 60}, {134, 61}, {134, 62}, {135, 62}, {136, 62}, {136, 62}, {137, 62},
    {137, 61},
};

BYTE tp[] = {
    6, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 2, 2, 2,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 5, 6, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6,
    2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 6, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
    2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3,
    6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 5, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2,
    2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
    2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 6, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    5, 6, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3, 6, 2, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 2, 3, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 2, 2, 3, 6, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
};

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

int main(int argc, char *argv[]) {
  WNDCLASSA properties;

  memset(&properties, 0, sizeof(properties));
  properties.lpszClassName = "AddString";
  properties.lpfnWndProc = WindowProc;
  properties.hInstance = GetModuleHandleA(0);
  properties.hbrBackground = (HBRUSH)CreateSolidBrush(RGB(255, 255, 255));
  RegisterClassA(&properties);

  CreateWindowA("AddString", "AddString test", WS_OVERLAPPEDWINDOW | WS_VISIBLE,
                CW_USEDEFAULT, CW_USEDEFAULT, 800, 600, 0, 0,
                GetModuleHandleA(0), 0);

  MSG Msg;
  while (GetMessage(&Msg, NULL, 0, 0) > 0) {
    TranslateMessage(&Msg);
    DispatchMessage(&Msg);
  }

  return 0;
}

LRESULT CALLBACK WindowProc(HWND hwnd, UINT uMsg, WPARAM wParam,
                            LPARAM lParam) {
  switch (uMsg) {
  case WM_PAINT: {
    WCHAR string[] = L"Kontakt";
    Font myFont(L"Arial", 50);
    RectF layoutRect(100.0f, 100.0f, 200.0f, 400.0f);
    RectF boundingBox;
    int linesfilled = 0;
    StringFormat format;
    struct GdiplusStartupInput gdiplusStartupInput;
    ULONG_PTR gdiplusToken;

    gdiplusStartupInput.GdiplusVersion = 1;
    gdiplusStartupInput.DebugEventCallback = NULL;
    gdiplusStartupInput.SuppressBackgroundThread = 0;
    gdiplusStartupInput.SuppressExternalCodecs = 0;

    GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, NULL);

    HDC hdc = GetDC(hwnd);
    LOGPEN LogPen;

    LogPen.lopnStyle = PS_SOLID;
    LogPen.lopnWidth.x = 1;
    LogPen.lopnWidth.y = 105;
    LogPen.lopnColor = RGB(235, 115, 5);

    HPEN newpen = CreatePenIndirect(&LogPen);
    SelectObject(hdc, &newpen);

    //BeginPath(hdc);

    PolyDraw(hdc, pti, tp, 610);

    //EndPath(hdc);

    ReleaseDC(hwnd, hdc);
    return 0;
  }
  default:
    printf("Other message\n");
    break;
  }

  return DefWindowProc(hwnd, uMsg, wParam, lParam);
}
