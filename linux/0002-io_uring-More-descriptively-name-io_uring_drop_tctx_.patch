From 86c6341481f72201dc9a07fa5305de733ad4ef08 Mon Sep 17 00:00:00 2001
From: David Kahurani <redress@duck.com>
Date: Tue, 12 Aug 2025 17:15:59 +0300
Subject: [PATCH 2/2] io_uring: More descriptively name io_uring_drop_tctx_refs

The method only drops cached references

Signed-off-by: David Kahurani <redress@duck.com>
---
 io_uring/io_uring.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/io_uring/io_uring.c b/io_uring/io_uring.c
index 43a97121ac66..754de23dd973 100644
--- a/io_uring/io_uring.c
+++ b/io_uring/io_uring.c
@@ -686,7 +686,7 @@ void io_task_refs_refill(struct io_uring_task *tctx)
 	tctx->cached_refs += refill;
 }
 
-static __cold void io_uring_drop_tctx_refs(struct task_struct *task)
+static __cold void io_uring_drop_cached_refs(struct task_struct *task)
 {
 	struct io_uring_task *tctx = task->io_uring;
 	unsigned int refs = tctx->cached_refs;
@@ -1169,7 +1169,7 @@ struct llist_node *tctx_task_work_run(struct io_uring_task *tctx,
 
 	/* relaxed read is enough as only the task itself sets ->in_cancel */
 	if (unlikely(atomic_read(&tctx->in_cancel)))
-		io_uring_drop_tctx_refs(current);
+		io_uring_drop_cached_refs(current);
 
 	trace_io_uring_task_work_run(tctx, *count);
 	return node;
@@ -3215,7 +3215,7 @@ __cold void io_uring_cancel_generic(bool cancel_all, struct io_sq_data *sqd)
 	do {
 		bool loop = false;
 
-		io_uring_drop_tctx_refs(current);
+		io_uring_drop_cached_refs(current);
 		if (!tctx_inflight(tctx, !cancel_all))
 			break;
 
@@ -3249,7 +3249,7 @@ __cold void io_uring_cancel_generic(bool cancel_all, struct io_sq_data *sqd)
 
 		prepare_to_wait(&tctx->wait, &wait, TASK_INTERRUPTIBLE);
 		io_run_task_work();
-		io_uring_drop_tctx_refs(current);
+		io_uring_drop_cached_refs(current);
 		xa_for_each(&tctx->xa, index, node) {
 			if (io_local_work_pending(node->ctx)) {
 				WARN_ON_ONCE(node->ctx->submitter_task &&
-- 
2.50.1

